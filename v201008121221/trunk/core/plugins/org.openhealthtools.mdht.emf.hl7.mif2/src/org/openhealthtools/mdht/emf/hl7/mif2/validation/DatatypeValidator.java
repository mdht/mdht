/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.openhealthtools.mdht.emf.hl7.mif2.validation;

import org.eclipse.emf.common.util.EList;

import org.openhealthtools.mdht.emf.hl7.mif2.DatatypeAnnotations;
import org.openhealthtools.mdht.emf.hl7.mif2.DatatypeBinding;
import org.openhealthtools.mdht.emf.hl7.mif2.DatatypeDerivation;
import org.openhealthtools.mdht.emf.hl7.mif2.DatatypeKind;
import org.openhealthtools.mdht.emf.hl7.mif2.DatatypeOperation;
import org.openhealthtools.mdht.emf.hl7.mif2.DatatypeParameter;
import org.openhealthtools.mdht.emf.hl7.mif2.DatatypeRef;
import org.openhealthtools.mdht.emf.hl7.mif2.VisibilityKind;

/**
 * A sample validator interface for {@link org.openhealthtools.mdht.emf.hl7.mif2.Datatype}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface DatatypeValidator {
	boolean validate();

	boolean validateDerivedFrom(EList<DatatypeDerivation> value);
	boolean validateHasDerivations(EList<DatatypeDerivation> value);
	boolean validateAnnotations(DatatypeAnnotations value);
	boolean validateEnumerationValue(EList<String> value);
	boolean validateParameter(EList<DatatypeParameter> value);
	boolean validateBinding(DatatypeBinding value);
	boolean validateChildDatatype(EList<DatatypeRef> value);
	boolean validateParentDatatype(EList<DatatypeRef> value);
	boolean validateProperty(EList<DatatypeOperation> value);
	boolean validateDatatypeKind(DatatypeKind value);
	boolean validateIsAbstract(boolean value);
	boolean validateName(String value);
	boolean validateTitle(String value);
	boolean validateVisibility(VisibilityKind value);
}

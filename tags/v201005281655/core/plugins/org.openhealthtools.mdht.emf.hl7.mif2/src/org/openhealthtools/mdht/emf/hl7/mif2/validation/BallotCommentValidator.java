/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.openhealthtools.mdht.emf.hl7.mif2.validation;

import java.math.BigInteger;

import javax.xml.datatype.XMLGregorianCalendar;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

import org.openhealthtools.mdht.emf.hl7.mif2.BallotCommentResolution;
import org.openhealthtools.mdht.emf.hl7.mif2.RealmElement;
import org.openhealthtools.mdht.emf.hl7.mif2.VoteKind;
import org.openhealthtools.mdht.emf.w3c.xhtml.Flow;


/**
 * A sample validator interface for {@link org.openhealthtools.mdht.emf.hl7.mif2.BallotComment}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface BallotCommentValidator {
	boolean validate();

	boolean validateContext(FeatureMap value);
	boolean validateRealmNamespace(EList<RealmElement> value);
	boolean validateExistingContent(Flow value);
	boolean validateSuggestedReplacement(Flow value);
	boolean validateResolution(EList<BallotCommentResolution> value);
	boolean validateCommentType(VoteKind value);
	boolean validateImplementedDate(XMLGregorianCalendar value);
	boolean validateImplementingPersonName(String value);
	boolean validateLocation(String value);
	boolean validateName(BigInteger value);
	boolean validateSubmissionId(String value);
}

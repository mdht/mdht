/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.openhealthtools.mdht.emf.hl7.mif2.validation;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

import org.openhealthtools.mdht.emf.hl7.mif2.DatatypeLimitation;
import org.openhealthtools.mdht.emf.hl7.mif2.DatatypeModelLibrary;
import org.openhealthtools.mdht.emf.hl7.mif2.PackageRef;
import org.openhealthtools.mdht.emf.hl7.mif2.RealmElement;
import org.openhealthtools.mdht.emf.hl7.mif2.ReleaseList;
import org.openhealthtools.mdht.emf.hl7.mif2.VocabularyLimitation;
import org.openhealthtools.mdht.emf.hl7.mif2.VocabularyModel;

/**
 * A sample validator interface for {@link org.openhealthtools.mdht.emf.hl7.mif2.ImplementationConstraints}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ImplementationConstraintsValidator {
	boolean validate();

	boolean validateSupportedReleases(EList<ReleaseList> value);
	boolean validateContext(FeatureMap value);
	boolean validateRealmNamespace(EList<RealmElement> value);
	boolean validateSupportedITS(EList<PackageRef> value);
	boolean validateAdditionalDatatypeModel(EList<DatatypeModelLibrary> value);
	boolean validateDatatypeLimitation(EList<DatatypeLimitation> value);
	boolean validateAdditionalVocabularyModel(EList<VocabularyModel> value);
	boolean validateVocabularyLimitation(EList<VocabularyLimitation> value);
}

/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.openhealthtools.mdht.emf.hl7.mif2.validation;

import java.math.BigInteger;

import org.eclipse.emf.common.util.EList;

import org.openhealthtools.mdht.emf.hl7.mif2.BusinessName;
import org.openhealthtools.mdht.emf.hl7.mif2.DatatypeOperationKind;
import org.openhealthtools.mdht.emf.hl7.mif2.DatatypeRef;
import org.openhealthtools.mdht.emf.hl7.mif2.OperationAnnotations;
import org.openhealthtools.mdht.emf.hl7.mif2.OperationDerivation;
import org.openhealthtools.mdht.emf.hl7.mif2.OperationParameter;
import org.openhealthtools.mdht.emf.hl7.mif2.OwnerScopeKind;
import org.openhealthtools.mdht.emf.hl7.mif2.VisibilityKind;
import org.openhealthtools.mdht.emf.hl7.mif2.VocabularySpecification;

/**
 * A sample validator interface for {@link org.openhealthtools.mdht.emf.hl7.mif2.DatatypeOperation}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface DatatypeOperationValidator {
	boolean validate();

	boolean validateBusinessName(EList<BusinessName> value);
	boolean validateAnnotations(OperationAnnotations value);
	boolean validateDerivedFrom(OperationDerivation value);
	boolean validateParameter(EList<OperationParameter> value);
	boolean validateType(DatatypeRef value);
	boolean validateVocabularySpecification(VocabularySpecification value);
	boolean validateMaximumMultiplicity(Object value);
	boolean validateMinimumMultiplicity(BigInteger value);
	boolean validateName(String value);
	boolean validateOwnerScope(OwnerScopeKind value);
	boolean validatePropertyKind(DatatypeOperationKind value);
	boolean validateSortKey(String value);
	boolean validateVisibility(VisibilityKind value);
}

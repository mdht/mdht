/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.openhealthtools.mdht.emf.hl7.mif2.validation;

import org.eclipse.emf.common.util.EList;

import org.openhealthtools.mdht.emf.hl7.mif2.BoundStaticModel;
import org.openhealthtools.mdht.emf.hl7.mif2.InteractionAnnotations;
import org.openhealthtools.mdht.emf.hl7.mif2.InteractionKind;
import org.openhealthtools.mdht.emf.hl7.mif2.PackageRef;
import org.openhealthtools.mdht.emf.hl7.mif2.ReceiverResponsibility;

/**
 * A sample validator interface for {@link org.openhealthtools.mdht.emf.hl7.mif2.Interaction}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface InteractionValidator {
	boolean validate();

	boolean validateAnnotations(InteractionAnnotations value);
	boolean validateInvokingTriggerEvent(PackageRef value);
	boolean validateArgumentMessage(BoundStaticModel value);
	boolean validateReceiverResponsibilities(EList<ReceiverResponsibility> value);
	boolean validateSendingApplication(EList<PackageRef> value);
	boolean validateReceivingApplication(EList<PackageRef> value);
	boolean validateInteractionType(InteractionKind value);
}

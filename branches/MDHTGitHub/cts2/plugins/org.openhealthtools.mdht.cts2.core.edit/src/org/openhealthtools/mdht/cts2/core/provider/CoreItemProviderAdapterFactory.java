/*******************************************************************************
 * Copyright (c) 2012 David A Carlson.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     David A Carlson (XMLmodeling.com) - initial API and implementation
 *******************************************************************************/
package org.openhealthtools.mdht.cts2.core.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.openhealthtools.mdht.cts2.core.util.CoreAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * 
 * @generated
 */
public class CoreItemProviderAdapterFactory extends CoreAdapterFactory implements ComposeableAdapterFactory,
		IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public CoreItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.AbstractResourceDescriptionDirectoryEntry}
	 * instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AbstractResourceDescriptionDirectoryEntryItemProvider abstractResourceDescriptionDirectoryEntryItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.AbstractResourceDescriptionDirectoryEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAbstractResourceDescriptionDirectoryEntryAdapter() {
		if (abstractResourceDescriptionDirectoryEntryItemProvider == null) {
			abstractResourceDescriptionDirectoryEntryItemProvider = new AbstractResourceDescriptionDirectoryEntryItemProvider(
				this);
		}

		return abstractResourceDescriptionDirectoryEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.AnonymousEntityReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AnonymousEntityReferenceItemProvider anonymousEntityReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.AnonymousEntityReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAnonymousEntityReferenceAdapter() {
		if (anonymousEntityReferenceItemProvider == null) {
			anonymousEntityReferenceItemProvider = new AnonymousEntityReferenceItemProvider(this);
		}

		return anonymousEntityReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.AnonymousStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AnonymousStatementItemProvider anonymousStatementItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.AnonymousStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAnonymousStatementAdapter() {
		if (anonymousStatementItemProvider == null) {
			anonymousStatementItemProvider = new AnonymousStatementItemProvider(this);
		}

		return anonymousStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.AssociationReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AssociationReferenceItemProvider associationReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.AssociationReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAssociationReferenceAdapter() {
		if (associationReferenceItemProvider == null) {
			associationReferenceItemProvider = new AssociationReferenceItemProvider(this);
		}

		return associationReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.BindingQualifierReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected BindingQualifierReferenceItemProvider bindingQualifierReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.BindingQualifierReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createBindingQualifierReferenceAdapter() {
		if (bindingQualifierReferenceItemProvider == null) {
			bindingQualifierReferenceItemProvider = new BindingQualifierReferenceItemProvider(this);
		}

		return bindingQualifierReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.CaseSignificanceReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CaseSignificanceReferenceItemProvider caseSignificanceReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.CaseSignificanceReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createCaseSignificanceReferenceAdapter() {
		if (caseSignificanceReferenceItemProvider == null) {
			caseSignificanceReferenceItemProvider = new CaseSignificanceReferenceItemProvider(this);
		}

		return caseSignificanceReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.ChangeDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ChangeDescriptionItemProvider changeDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.ChangeDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createChangeDescriptionAdapter() {
		if (changeDescriptionItemProvider == null) {
			changeDescriptionItemProvider = new ChangeDescriptionItemProvider(this);
		}

		return changeDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.ChangeSetBase} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ChangeSetBaseItemProvider changeSetBaseItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.ChangeSetBase}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createChangeSetBaseAdapter() {
		if (changeSetBaseItemProvider == null) {
			changeSetBaseItemProvider = new ChangeSetBaseItemProvider(this);
		}

		return changeSetBaseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.CodeSystemCategoryReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CodeSystemCategoryReferenceItemProvider codeSystemCategoryReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.CodeSystemCategoryReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createCodeSystemCategoryReferenceAdapter() {
		if (codeSystemCategoryReferenceItemProvider == null) {
			codeSystemCategoryReferenceItemProvider = new CodeSystemCategoryReferenceItemProvider(this);
		}

		return codeSystemCategoryReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.CodeSystemReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CodeSystemReferenceItemProvider codeSystemReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.CodeSystemReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createCodeSystemReferenceAdapter() {
		if (codeSystemReferenceItemProvider == null) {
			codeSystemReferenceItemProvider = new CodeSystemReferenceItemProvider(this);
		}

		return codeSystemReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.CodeSystemVersionReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CodeSystemVersionReferenceItemProvider codeSystemVersionReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.CodeSystemVersionReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createCodeSystemVersionReferenceAdapter() {
		if (codeSystemVersionReferenceItemProvider == null) {
			codeSystemVersionReferenceItemProvider = new CodeSystemVersionReferenceItemProvider(this);
		}

		return codeSystemVersionReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.Comment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected CommentItemProvider commentItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.Comment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createCommentAdapter() {
		if (commentItemProvider == null) {
			commentItemProvider = new CommentItemProvider(this);
		}

		return commentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.ConceptDomainReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ConceptDomainReferenceItemProvider conceptDomainReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.ConceptDomainReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createConceptDomainReferenceAdapter() {
		if (conceptDomainReferenceItemProvider == null) {
			conceptDomainReferenceItemProvider = new ConceptDomainReferenceItemProvider(this);
		}

		return conceptDomainReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.ContextReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ContextReferenceItemProvider contextReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.ContextReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createContextReferenceAdapter() {
		if (contextReferenceItemProvider == null) {
			contextReferenceItemProvider = new ContextReferenceItemProvider(this);
		}

		return contextReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.Definition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DefinitionItemProvider definitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.Definition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createDefinitionAdapter() {
		if (definitionItemProvider == null) {
			definitionItemProvider = new DefinitionItemProvider(this);
		}

		return definitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.DescriptionInCodeSystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DescriptionInCodeSystemItemProvider descriptionInCodeSystemItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.DescriptionInCodeSystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createDescriptionInCodeSystemAdapter() {
		if (descriptionInCodeSystemItemProvider == null) {
			descriptionInCodeSystemItemProvider = new DescriptionInCodeSystemItemProvider(this);
		}

		return descriptionInCodeSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.DesignationFidelityReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DesignationFidelityReferenceItemProvider designationFidelityReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.DesignationFidelityReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createDesignationFidelityReferenceAdapter() {
		if (designationFidelityReferenceItemProvider == null) {
			designationFidelityReferenceItemProvider = new DesignationFidelityReferenceItemProvider(this);
		}

		return designationFidelityReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.DesignationTypeReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DesignationTypeReferenceItemProvider designationTypeReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.DesignationTypeReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createDesignationTypeReferenceAdapter() {
		if (designationTypeReferenceItemProvider == null) {
			designationTypeReferenceItemProvider = new DesignationTypeReferenceItemProvider(this);
		}

		return designationTypeReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.EntityExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EntityExpressionItemProvider entityExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.EntityExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createEntityExpressionAdapter() {
		if (entityExpressionItemProvider == null) {
			entityExpressionItemProvider = new EntityExpressionItemProvider(this);
		}

		return entityExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.EntityReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EntityReferenceItemProvider entityReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.EntityReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createEntityReferenceAdapter() {
		if (entityReferenceItemProvider == null) {
			entityReferenceItemProvider = new EntityReferenceItemProvider(this);
		}

		return entityReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.EntityReferenceList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EntityReferenceListItemProvider entityReferenceListItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.EntityReferenceList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createEntityReferenceListAdapter() {
		if (entityReferenceListItemProvider == null) {
			entityReferenceListItemProvider = new EntityReferenceListItemProvider(this);
		}

		return entityReferenceListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.EntitySynopsis} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EntitySynopsisItemProvider entitySynopsisItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.EntitySynopsis}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createEntitySynopsisAdapter() {
		if (entitySynopsisItemProvider == null) {
			entitySynopsisItemProvider = new EntitySynopsisItemProvider(this);
		}

		return entitySynopsisItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.EntryDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EntryDescriptionItemProvider entryDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.EntryDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createEntryDescriptionAdapter() {
		if (entryDescriptionItemProvider == null) {
			entryDescriptionItemProvider = new EntryDescriptionItemProvider(this);
		}

		return entryDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.Example} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ExampleItemProvider exampleItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.Example}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createExampleAdapter() {
		if (exampleItemProvider == null) {
			exampleItemProvider = new ExampleItemProvider(this);
		}

		return exampleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.Filter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected FilterItemProvider filterItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.Filter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createFilterAdapter() {
		if (filterItemProvider == null) {
			filterItemProvider = new FilterItemProvider(this);
		}

		return filterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.FilterComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected FilterComponentItemProvider filterComponentItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.FilterComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createFilterComponentAdapter() {
		if (filterComponentItemProvider == null) {
			filterComponentItemProvider = new FilterComponentItemProvider(this);
		}

		return filterComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.FormalityLevelReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected FormalityLevelReferenceItemProvider formalityLevelReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.FormalityLevelReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createFormalityLevelReferenceAdapter() {
		if (formalityLevelReferenceItemProvider == null) {
			formalityLevelReferenceItemProvider = new FormalityLevelReferenceItemProvider(this);
		}

		return formalityLevelReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.FormatReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected FormatReferenceItemProvider formatReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.FormatReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createFormatReferenceAdapter() {
		if (formatReferenceItemProvider == null) {
			formatReferenceItemProvider = new FormatReferenceItemProvider(this);
		}

		return formatReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.LanguageReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected LanguageReferenceItemProvider languageReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.LanguageReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createLanguageReferenceAdapter() {
		if (languageReferenceItemProvider == null) {
			languageReferenceItemProvider = new LanguageReferenceItemProvider(this);
		}

		return languageReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.MapCorrelationReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected MapCorrelationReferenceItemProvider mapCorrelationReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.MapCorrelationReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createMapCorrelationReferenceAdapter() {
		if (mapCorrelationReferenceItemProvider == null) {
			mapCorrelationReferenceItemProvider = new MapCorrelationReferenceItemProvider(this);
		}

		return mapCorrelationReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.MapReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected MapReferenceItemProvider mapReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.MapReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createMapReferenceAdapter() {
		if (mapReferenceItemProvider == null) {
			mapReferenceItemProvider = new MapReferenceItemProvider(this);
		}

		return mapReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.MapVersionReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected MapVersionReferenceItemProvider mapVersionReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.MapVersionReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createMapVersionReferenceAdapter() {
		if (mapVersionReferenceItemProvider == null) {
			mapVersionReferenceItemProvider = new MapVersionReferenceItemProvider(this);
		}

		return mapVersionReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.MatchAlgorithmReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected MatchAlgorithmReferenceItemProvider matchAlgorithmReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.MatchAlgorithmReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createMatchAlgorithmReferenceAdapter() {
		if (matchAlgorithmReferenceItemProvider == null) {
			matchAlgorithmReferenceItemProvider = new MatchAlgorithmReferenceItemProvider(this);
		}

		return matchAlgorithmReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.Message} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected MessageItemProvider messageItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.Message}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createMessageAdapter() {
		if (messageItemProvider == null) {
			messageItemProvider = new MessageItemProvider(this);
		}

		return messageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.ModelAttributeReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ModelAttributeReferenceItemProvider modelAttributeReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.ModelAttributeReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createModelAttributeReferenceAdapter() {
		if (modelAttributeReferenceItemProvider == null) {
			modelAttributeReferenceItemProvider = new ModelAttributeReferenceItemProvider(this);
		}

		return modelAttributeReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.NameAndMeaningReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected NameAndMeaningReferenceItemProvider nameAndMeaningReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.NameAndMeaningReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createNameAndMeaningReferenceAdapter() {
		if (nameAndMeaningReferenceItemProvider == null) {
			nameAndMeaningReferenceItemProvider = new NameAndMeaningReferenceItemProvider(this);
		}

		return nameAndMeaningReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.NamedEntityReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected NamedEntityReferenceItemProvider namedEntityReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.NamedEntityReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createNamedEntityReferenceAdapter() {
		if (namedEntityReferenceItemProvider == null) {
			namedEntityReferenceItemProvider = new NamedEntityReferenceItemProvider(this);
		}

		return namedEntityReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.NamespaceReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected NamespaceReferenceItemProvider namespaceReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.NamespaceReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createNamespaceReferenceAdapter() {
		if (namespaceReferenceItemProvider == null) {
			namespaceReferenceItemProvider = new NamespaceReferenceItemProvider(this);
		}

		return namespaceReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.OntologyDomainReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected OntologyDomainReferenceItemProvider ontologyDomainReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.OntologyDomainReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createOntologyDomainReferenceAdapter() {
		if (ontologyDomainReferenceItemProvider == null) {
			ontologyDomainReferenceItemProvider = new OntologyDomainReferenceItemProvider(this);
		}

		return ontologyDomainReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.OntologyEngineeringMethodologyReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected OntologyEngineeringMethodologyReferenceItemProvider ontologyEngineeringMethodologyReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.OntologyEngineeringMethodologyReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createOntologyEngineeringMethodologyReferenceAdapter() {
		if (ontologyEngineeringMethodologyReferenceItemProvider == null) {
			ontologyEngineeringMethodologyReferenceItemProvider = new OntologyEngineeringMethodologyReferenceItemProvider(
				this);
		}

		return ontologyEngineeringMethodologyReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.OntologyEngineeringToolReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected OntologyEngineeringToolReferenceItemProvider ontologyEngineeringToolReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.OntologyEngineeringToolReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createOntologyEngineeringToolReferenceAdapter() {
		if (ontologyEngineeringToolReferenceItemProvider == null) {
			ontologyEngineeringToolReferenceItemProvider = new OntologyEngineeringToolReferenceItemProvider(this);
		}

		return ontologyEngineeringToolReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.OntologyLanguageAndSyntax} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected OntologyLanguageAndSyntaxItemProvider ontologyLanguageAndSyntaxItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.OntologyLanguageAndSyntax}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createOntologyLanguageAndSyntaxAdapter() {
		if (ontologyLanguageAndSyntaxItemProvider == null) {
			ontologyLanguageAndSyntaxItemProvider = new OntologyLanguageAndSyntaxItemProvider(this);
		}

		return ontologyLanguageAndSyntaxItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.OntologyLanguageReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected OntologyLanguageReferenceItemProvider ontologyLanguageReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.OntologyLanguageReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createOntologyLanguageReferenceAdapter() {
		if (ontologyLanguageReferenceItemProvider == null) {
			ontologyLanguageReferenceItemProvider = new OntologyLanguageReferenceItemProvider(this);
		}

		return ontologyLanguageReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.OntologySyntaxReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected OntologySyntaxReferenceItemProvider ontologySyntaxReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.OntologySyntaxReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createOntologySyntaxReferenceAdapter() {
		if (ontologySyntaxReferenceItemProvider == null) {
			ontologySyntaxReferenceItemProvider = new OntologySyntaxReferenceItemProvider(this);
		}

		return ontologySyntaxReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.OntologyTaskReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected OntologyTaskReferenceItemProvider ontologyTaskReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.OntologyTaskReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createOntologyTaskReferenceAdapter() {
		if (ontologyTaskReferenceItemProvider == null) {
			ontologyTaskReferenceItemProvider = new OntologyTaskReferenceItemProvider(this);
		}

		return ontologyTaskReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.OntologyTypeReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected OntologyTypeReferenceItemProvider ontologyTypeReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.OntologyTypeReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createOntologyTypeReferenceAdapter() {
		if (ontologyTypeReferenceItemProvider == null) {
			ontologyTypeReferenceItemProvider = new OntologyTypeReferenceItemProvider(this);
		}

		return ontologyTypeReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.OpaqueData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected OpaqueDataItemProvider opaqueDataItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.OpaqueData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createOpaqueDataAdapter() {
		if (opaqueDataItemProvider == null) {
			opaqueDataItemProvider = new OpaqueDataItemProvider(this);
		}

		return opaqueDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.Parameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ParameterItemProvider parameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.Parameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createParameterAdapter() {
		if (parameterItemProvider == null) {
			parameterItemProvider = new ParameterItemProvider(this);
		}

		return parameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.PredicateReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected PredicateReferenceItemProvider predicateReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.PredicateReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createPredicateReferenceAdapter() {
		if (predicateReferenceItemProvider == null) {
			predicateReferenceItemProvider = new PredicateReferenceItemProvider(this);
		}

		return predicateReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.Property} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected PropertyItemProvider propertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.Property}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createPropertyAdapter() {
		if (propertyItemProvider == null) {
			propertyItemProvider = new PropertyItemProvider(this);
		}

		return propertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.PropertyReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected PropertyReferenceItemProvider propertyReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.PropertyReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createPropertyReferenceAdapter() {
		if (propertyReferenceItemProvider == null) {
			propertyReferenceItemProvider = new PropertyReferenceItemProvider(this);
		}

		return propertyReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.ReasoningAlgorithmReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ReasoningAlgorithmReferenceItemProvider reasoningAlgorithmReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.ReasoningAlgorithmReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createReasoningAlgorithmReferenceAdapter() {
		if (reasoningAlgorithmReferenceItemProvider == null) {
			reasoningAlgorithmReferenceItemProvider = new ReasoningAlgorithmReferenceItemProvider(this);
		}

		return reasoningAlgorithmReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.ResourceVersionDescriptionDirectoryEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ResourceVersionDescriptionDirectoryEntryItemProvider resourceVersionDescriptionDirectoryEntryItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.ResourceVersionDescriptionDirectoryEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createResourceVersionDescriptionDirectoryEntryAdapter() {
		if (resourceVersionDescriptionDirectoryEntryItemProvider == null) {
			resourceVersionDescriptionDirectoryEntryItemProvider = new ResourceVersionDescriptionDirectoryEntryItemProvider(
				this);
		}

		return resourceVersionDescriptionDirectoryEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.RESTResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected RESTResourceItemProvider restResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.RESTResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createRESTResourceAdapter() {
		if (restResourceItemProvider == null) {
			restResourceItemProvider = new RESTResourceItemProvider(this);
		}

		return restResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.RoleReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected RoleReferenceItemProvider roleReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.RoleReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createRoleReferenceAdapter() {
		if (roleReferenceItemProvider == null) {
			roleReferenceItemProvider = new RoleReferenceItemProvider(this);
		}

		return roleReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.ScopedEntityName} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ScopedEntityNameItemProvider scopedEntityNameItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.ScopedEntityName}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createScopedEntityNameAdapter() {
		if (scopedEntityNameItemProvider == null) {
			scopedEntityNameItemProvider = new ScopedEntityNameItemProvider(this);
		}

		return scopedEntityNameItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.SortCriteria} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SortCriteriaItemProvider sortCriteriaItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.SortCriteria}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createSortCriteriaAdapter() {
		if (sortCriteriaItemProvider == null) {
			sortCriteriaItemProvider = new SortCriteriaItemProvider(this);
		}

		return sortCriteriaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.SortCriterion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SortCriterionItemProvider sortCriterionItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.SortCriterion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createSortCriterionAdapter() {
		if (sortCriterionItemProvider == null) {
			sortCriterionItemProvider = new SortCriterionItemProvider(this);
		}

		return sortCriterionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.SourceAndNotation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SourceAndNotationItemProvider sourceAndNotationItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.SourceAndNotation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createSourceAndNotationAdapter() {
		if (sourceAndNotationItemProvider == null) {
			sourceAndNotationItemProvider = new SourceAndNotationItemProvider(this);
		}

		return sourceAndNotationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.SourceAndRoleReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SourceAndRoleReferenceItemProvider sourceAndRoleReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.SourceAndRoleReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createSourceAndRoleReferenceAdapter() {
		if (sourceAndRoleReferenceItemProvider == null) {
			sourceAndRoleReferenceItemProvider = new SourceAndRoleReferenceItemProvider(this);
		}

		return sourceAndRoleReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.SourceReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected SourceReferenceItemProvider sourceReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.SourceReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createSourceReferenceAdapter() {
		if (sourceReferenceItemProvider == null) {
			sourceReferenceItemProvider = new SourceReferenceItemProvider(this);
		}

		return sourceReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.StatementTarget} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected StatementTargetItemProvider statementTargetItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.StatementTarget}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createStatementTargetAdapter() {
		if (statementTargetItemProvider == null) {
			statementTargetItemProvider = new StatementTargetItemProvider(this);
		}

		return statementTargetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.StatusReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected StatusReferenceItemProvider statusReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.StatusReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createStatusReferenceAdapter() {
		if (statusReferenceItemProvider == null) {
			statusReferenceItemProvider = new StatusReferenceItemProvider(this);
		}

		return statusReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.TsAnyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected TsAnyTypeItemProvider tsAnyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.TsAnyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createTsAnyTypeAdapter() {
		if (tsAnyTypeItemProvider == null) {
			tsAnyTypeItemProvider = new TsAnyTypeItemProvider(this);
		}

		return tsAnyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.URIAndEntityName} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected URIAndEntityNameItemProvider uriAndEntityNameItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.URIAndEntityName}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createURIAndEntityNameAdapter() {
		if (uriAndEntityNameItemProvider == null) {
			uriAndEntityNameItemProvider = new URIAndEntityNameItemProvider(this);
		}

		return uriAndEntityNameItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.ValueSetDefinitionReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ValueSetDefinitionReferenceItemProvider valueSetDefinitionReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.ValueSetDefinitionReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createValueSetDefinitionReferenceAdapter() {
		if (valueSetDefinitionReferenceItemProvider == null) {
			valueSetDefinitionReferenceItemProvider = new ValueSetDefinitionReferenceItemProvider(this);
		}

		return valueSetDefinitionReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.ValueSetReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ValueSetReferenceItemProvider valueSetReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.ValueSetReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createValueSetReferenceAdapter() {
		if (valueSetReferenceItemProvider == null) {
			valueSetReferenceItemProvider = new ValueSetReferenceItemProvider(this);
		}

		return valueSetReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.core.VersionTagReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected VersionTagReferenceItemProvider versionTagReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.core.VersionTagReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createVersionTagReferenceAdapter() {
		if (versionTagReferenceItemProvider == null) {
			versionTagReferenceItemProvider = new VersionTagReferenceItemProvider(this);
		}

		return versionTagReferenceItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null
				? this
				: parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void dispose() {
		if (abstractResourceDescriptionDirectoryEntryItemProvider != null) {
			abstractResourceDescriptionDirectoryEntryItemProvider.dispose();
		}
		if (anonymousEntityReferenceItemProvider != null) {
			anonymousEntityReferenceItemProvider.dispose();
		}
		if (anonymousStatementItemProvider != null) {
			anonymousStatementItemProvider.dispose();
		}
		if (associationReferenceItemProvider != null) {
			associationReferenceItemProvider.dispose();
		}
		if (bindingQualifierReferenceItemProvider != null) {
			bindingQualifierReferenceItemProvider.dispose();
		}
		if (caseSignificanceReferenceItemProvider != null) {
			caseSignificanceReferenceItemProvider.dispose();
		}
		if (changeDescriptionItemProvider != null) {
			changeDescriptionItemProvider.dispose();
		}
		if (changeSetBaseItemProvider != null) {
			changeSetBaseItemProvider.dispose();
		}
		if (codeSystemCategoryReferenceItemProvider != null) {
			codeSystemCategoryReferenceItemProvider.dispose();
		}
		if (codeSystemReferenceItemProvider != null) {
			codeSystemReferenceItemProvider.dispose();
		}
		if (codeSystemVersionReferenceItemProvider != null) {
			codeSystemVersionReferenceItemProvider.dispose();
		}
		if (commentItemProvider != null) {
			commentItemProvider.dispose();
		}
		if (conceptDomainReferenceItemProvider != null) {
			conceptDomainReferenceItemProvider.dispose();
		}
		if (contextReferenceItemProvider != null) {
			contextReferenceItemProvider.dispose();
		}
		if (definitionItemProvider != null) {
			definitionItemProvider.dispose();
		}
		if (descriptionInCodeSystemItemProvider != null) {
			descriptionInCodeSystemItemProvider.dispose();
		}
		if (designationFidelityReferenceItemProvider != null) {
			designationFidelityReferenceItemProvider.dispose();
		}
		if (designationTypeReferenceItemProvider != null) {
			designationTypeReferenceItemProvider.dispose();
		}
		if (entityExpressionItemProvider != null) {
			entityExpressionItemProvider.dispose();
		}
		if (entityReferenceItemProvider != null) {
			entityReferenceItemProvider.dispose();
		}
		if (entityReferenceListItemProvider != null) {
			entityReferenceListItemProvider.dispose();
		}
		if (entitySynopsisItemProvider != null) {
			entitySynopsisItemProvider.dispose();
		}
		if (entryDescriptionItemProvider != null) {
			entryDescriptionItemProvider.dispose();
		}
		if (exampleItemProvider != null) {
			exampleItemProvider.dispose();
		}
		if (filterItemProvider != null) {
			filterItemProvider.dispose();
		}
		if (filterComponentItemProvider != null) {
			filterComponentItemProvider.dispose();
		}
		if (formalityLevelReferenceItemProvider != null) {
			formalityLevelReferenceItemProvider.dispose();
		}
		if (formatReferenceItemProvider != null) {
			formatReferenceItemProvider.dispose();
		}
		if (languageReferenceItemProvider != null) {
			languageReferenceItemProvider.dispose();
		}
		if (mapCorrelationReferenceItemProvider != null) {
			mapCorrelationReferenceItemProvider.dispose();
		}
		if (mapReferenceItemProvider != null) {
			mapReferenceItemProvider.dispose();
		}
		if (mapVersionReferenceItemProvider != null) {
			mapVersionReferenceItemProvider.dispose();
		}
		if (matchAlgorithmReferenceItemProvider != null) {
			matchAlgorithmReferenceItemProvider.dispose();
		}
		if (messageItemProvider != null) {
			messageItemProvider.dispose();
		}
		if (modelAttributeReferenceItemProvider != null) {
			modelAttributeReferenceItemProvider.dispose();
		}
		if (nameAndMeaningReferenceItemProvider != null) {
			nameAndMeaningReferenceItemProvider.dispose();
		}
		if (namedEntityReferenceItemProvider != null) {
			namedEntityReferenceItemProvider.dispose();
		}
		if (namespaceReferenceItemProvider != null) {
			namespaceReferenceItemProvider.dispose();
		}
		if (ontologyDomainReferenceItemProvider != null) {
			ontologyDomainReferenceItemProvider.dispose();
		}
		if (ontologyEngineeringMethodologyReferenceItemProvider != null) {
			ontologyEngineeringMethodologyReferenceItemProvider.dispose();
		}
		if (ontologyEngineeringToolReferenceItemProvider != null) {
			ontologyEngineeringToolReferenceItemProvider.dispose();
		}
		if (ontologyLanguageAndSyntaxItemProvider != null) {
			ontologyLanguageAndSyntaxItemProvider.dispose();
		}
		if (ontologyLanguageReferenceItemProvider != null) {
			ontologyLanguageReferenceItemProvider.dispose();
		}
		if (ontologySyntaxReferenceItemProvider != null) {
			ontologySyntaxReferenceItemProvider.dispose();
		}
		if (ontologyTaskReferenceItemProvider != null) {
			ontologyTaskReferenceItemProvider.dispose();
		}
		if (ontologyTypeReferenceItemProvider != null) {
			ontologyTypeReferenceItemProvider.dispose();
		}
		if (opaqueDataItemProvider != null) {
			opaqueDataItemProvider.dispose();
		}
		if (parameterItemProvider != null) {
			parameterItemProvider.dispose();
		}
		if (predicateReferenceItemProvider != null) {
			predicateReferenceItemProvider.dispose();
		}
		if (propertyItemProvider != null) {
			propertyItemProvider.dispose();
		}
		if (propertyReferenceItemProvider != null) {
			propertyReferenceItemProvider.dispose();
		}
		if (reasoningAlgorithmReferenceItemProvider != null) {
			reasoningAlgorithmReferenceItemProvider.dispose();
		}
		if (resourceVersionDescriptionDirectoryEntryItemProvider != null) {
			resourceVersionDescriptionDirectoryEntryItemProvider.dispose();
		}
		if (restResourceItemProvider != null) {
			restResourceItemProvider.dispose();
		}
		if (roleReferenceItemProvider != null) {
			roleReferenceItemProvider.dispose();
		}
		if (scopedEntityNameItemProvider != null) {
			scopedEntityNameItemProvider.dispose();
		}
		if (sortCriteriaItemProvider != null) {
			sortCriteriaItemProvider.dispose();
		}
		if (sortCriterionItemProvider != null) {
			sortCriterionItemProvider.dispose();
		}
		if (sourceAndNotationItemProvider != null) {
			sourceAndNotationItemProvider.dispose();
		}
		if (sourceAndRoleReferenceItemProvider != null) {
			sourceAndRoleReferenceItemProvider.dispose();
		}
		if (sourceReferenceItemProvider != null) {
			sourceReferenceItemProvider.dispose();
		}
		if (statementTargetItemProvider != null) {
			statementTargetItemProvider.dispose();
		}
		if (statusReferenceItemProvider != null) {
			statusReferenceItemProvider.dispose();
		}
		if (tsAnyTypeItemProvider != null) {
			tsAnyTypeItemProvider.dispose();
		}
		if (uriAndEntityNameItemProvider != null) {
			uriAndEntityNameItemProvider.dispose();
		}
		if (documentRootItemProvider != null) {
			documentRootItemProvider.dispose();
		}
		if (valueSetDefinitionReferenceItemProvider != null) {
			valueSetDefinitionReferenceItemProvider.dispose();
		}
		if (valueSetReferenceItemProvider != null) {
			valueSetReferenceItemProvider.dispose();
		}
		if (versionTagReferenceItemProvider != null) {
			versionTagReferenceItemProvider.dispose();
		}
	}

}

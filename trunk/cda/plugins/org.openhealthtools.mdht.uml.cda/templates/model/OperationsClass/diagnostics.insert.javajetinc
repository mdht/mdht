<%
String oclExp = UML2GenModelUtil.getUpperName(genOperation.getName()) + (genOperation.getGenParameters().size() == 0 ? "" : "__" + UML2GenModelUtil.getUpperName(genOperation.getParameterTypes("_", false))) + "__EOCL_EXP";

EClass eClass = genClass.getEcoreClass();
String name = genOperation.getName();

String severity = null;

String annotation = EcoreUtil.getAnnotation(eClass, "http://www.openhealthtools.org/mdht/uml/cda/annotation", "constraints.diagnostic.info");
if (annotation != null && Arrays.asList(annotation.split(" ")).contains(name)) {
	severity = "INFO";
}

annotation = EcoreUtil.getAnnotation(eClass, "http://www.openhealthtools.org/mdht/uml/cda/annotation", "constraints.diagnostic.warning");
if (annotation != null && Arrays.asList(annotation.split(" ")).contains(name)) {
	severity = "WARNING";
}

annotation = EcoreUtil.getAnnotation(eClass, "http://www.openhealthtools.org/mdht/uml/cda/annotation", "constraints.diagnostic.error");
if (annotation != null && Arrays.asList(annotation.split(" ")).contains(name)) {
	severity = "ERROR";
}

if (severity != null) {%>
				<%=diagnostics%>.add
					(new <%=genModel.getImportedName("org.eclipse.emf.common.util.BasicDiagnostic")%>
						(<%=genModel.getImportedName("org.eclipse.emf.common.util.Diagnostic")%>.ERROR,
						 <%=opClass.getGenPackage().getImportedValidatorClassName()%>.DIAGNOSTIC_SOURCE,
						 <%=opClass.getGenPackage().getImportedValidatorClassName()%>.<%=opClass.getOperationID(genOperation)%>,
						 <%if (genModel.hasModelPluginClass()) {%><%=genModel.getImportedName(genModel.getQualifiedModelPluginClassName())%>.INSTANCE.getString("<%=name%>"),<%=genModel.getNonNLS()%><%=genModel.getNonNLS(2)%><%} else {%><%=genModel.getImportedName("org.openhealthtools.mdht.uml.cda.CDAPlugin")%>.INSTANCE.getString("_UI_GenericInvariant_diagnostic", new Object[] { "<%=genOperation.getName()%>", <%=oclExp%>, org.eclipse.emf.ecore.util.EObjectValidator.getObjectLabel(<%=genClass.safeName(genClass.getUncapName())%>, <%=context%>) }),<%=genModel.getNonNLS()%><%=genModel.getNonNLS(2)%><%}%>
						 new Object [] { <%=genClass.safeName(genClass.getUncapName())%> }));
<%} else {%>
				<%=diagnostics%>.add
					(new <%=genModel.getImportedName("org.eclipse.emf.common.util.BasicDiagnostic")%>
						(<%=genModel.getImportedName("org.eclipse.emf.common.util.Diagnostic")%>.ERROR,
						 <%=opClass.getGenPackage().getImportedValidatorClassName()%>.DIAGNOSTIC_SOURCE,
						 <%=opClass.getGenPackage().getImportedValidatorClassName()%>.<%=opClass.getOperationID(genOperation)%>,
						 org.eclipse.emf.ecore.plugin.EcorePlugin.INSTANCE.getString("_UI_GenericInvariant_diagnostic", new Object[] { "<%=genOperation.getName()%>", org.eclipse.emf.ecore.util.EObjectValidator.getObjectLabel(<%=genClass.safeName(genClass.getUncapName())%>, <%=context%>) }),<%=genModel.getNonNLS()%><%=genModel.getNonNLS(2)%>
						 new Object [] { <%=genClass.safeName(genClass.getUncapName())%> }));
<%}%>
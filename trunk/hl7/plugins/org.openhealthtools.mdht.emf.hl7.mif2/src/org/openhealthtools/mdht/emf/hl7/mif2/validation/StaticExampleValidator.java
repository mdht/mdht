/*******************************************************************************
 * Copyright (c) 2006, 2009 David A Carlson
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     David A Carlson (XMLmodeling.com) - initial API and implementation
 *******************************************************************************/
package org.openhealthtools.mdht.emf.hl7.mif2.validation;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

import org.openhealthtools.mdht.emf.hl7.mif2.AnnotationDerivation;
import org.openhealthtools.mdht.emf.hl7.mif2.BusinessName;
import org.openhealthtools.mdht.emf.hl7.mif2.FreeFormMarkupWithLanguage;
import org.openhealthtools.mdht.emf.hl7.mif2.ITSKind;
import org.openhealthtools.mdht.emf.hl7.mif2.RealmElement;

/**
 * A sample validator interface for {@link org.openhealthtools.mdht.emf.hl7.mif2.StaticExample}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface StaticExampleValidator {
	boolean validate();

	boolean validateData(EList<FreeFormMarkupWithLanguage> value);

	boolean validateContext(FeatureMap value);

	boolean validateRealmNamespace(EList<RealmElement> value);

	boolean validateBusinessName(EList<BusinessName> value);

	boolean validateDerivationSupplier(EList<AnnotationDerivation> value);

	boolean validateId(String value);

	boolean validateItsName(ITSKind value);

	boolean validateName(String value);

	boolean validateSortKey(String value);
}

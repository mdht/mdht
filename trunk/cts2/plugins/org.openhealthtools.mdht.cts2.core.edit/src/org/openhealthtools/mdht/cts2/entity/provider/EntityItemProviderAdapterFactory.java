/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.openhealthtools.mdht.cts2.entity.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.openhealthtools.mdht.cts2.entity.util.EntityAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * 
 * @generated
 */
public class EntityItemProviderAdapterFactory extends EntityAdapterFactory implements ComposeableAdapterFactory,
		IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public EntityItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.AnnotationPropertyDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AnnotationPropertyDescriptionItemProvider annotationPropertyDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.AnnotationPropertyDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAnnotationPropertyDescriptionAdapter() {
		if (annotationPropertyDescriptionItemProvider == null) {
			annotationPropertyDescriptionItemProvider = new AnnotationPropertyDescriptionItemProvider(this);
		}

		return annotationPropertyDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.AnonymousEntityDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AnonymousEntityDescriptionItemProvider anonymousEntityDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.AnonymousEntityDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAnonymousEntityDescriptionAdapter() {
		if (anonymousEntityDescriptionItemProvider == null) {
			anonymousEntityDescriptionItemProvider = new AnonymousEntityDescriptionItemProvider(this);
		}

		return anonymousEntityDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.AnonymousIndividualDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected AnonymousIndividualDescriptionItemProvider anonymousIndividualDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.AnonymousIndividualDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAnonymousIndividualDescriptionAdapter() {
		if (anonymousIndividualDescriptionItemProvider == null) {
			anonymousIndividualDescriptionItemProvider = new AnonymousIndividualDescriptionItemProvider(this);
		}

		return anonymousIndividualDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.ClassDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ClassDescriptionItemProvider classDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.ClassDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createClassDescriptionAdapter() {
		if (classDescriptionItemProvider == null) {
			classDescriptionItemProvider = new ClassDescriptionItemProvider(this);
		}

		return classDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.DataPropertyDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DataPropertyDescriptionItemProvider dataPropertyDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.DataPropertyDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createDataPropertyDescriptionAdapter() {
		if (dataPropertyDescriptionItemProvider == null) {
			dataPropertyDescriptionItemProvider = new DataPropertyDescriptionItemProvider(this);
		}

		return dataPropertyDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.DataTypeDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DataTypeDescriptionItemProvider dataTypeDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.DataTypeDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createDataTypeDescriptionAdapter() {
		if (dataTypeDescriptionItemProvider == null) {
			dataTypeDescriptionItemProvider = new DataTypeDescriptionItemProvider(this);
		}

		return dataTypeDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.Designation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DesignationItemProvider designationItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.Designation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createDesignationAdapter() {
		if (designationItemProvider == null) {
			designationItemProvider = new DesignationItemProvider(this);
		}

		return designationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.EntityDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EntityDescriptionItemProvider entityDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.EntityDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createEntityDescriptionAdapter() {
		if (entityDescriptionItemProvider == null) {
			entityDescriptionItemProvider = new EntityDescriptionItemProvider(this);
		}

		return entityDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.EntityDescriptionMsg} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EntityDescriptionMsgItemProvider entityDescriptionMsgItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.EntityDescriptionMsg}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createEntityDescriptionMsgAdapter() {
		if (entityDescriptionMsgItemProvider == null) {
			entityDescriptionMsgItemProvider = new EntityDescriptionMsgItemProvider(this);
		}

		return entityDescriptionMsgItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.EntityDirectory} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EntityDirectoryItemProvider entityDirectoryItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.EntityDirectory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createEntityDirectoryAdapter() {
		if (entityDirectoryItemProvider == null) {
			entityDirectoryItemProvider = new EntityDirectoryItemProvider(this);
		}

		return entityDirectoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.EntityDirectoryEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EntityDirectoryEntryItemProvider entityDirectoryEntryItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.EntityDirectoryEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createEntityDirectoryEntryAdapter() {
		if (entityDirectoryEntryItemProvider == null) {
			entityDirectoryEntryItemProvider = new EntityDirectoryEntryItemProvider(this);
		}

		return entityDirectoryEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.EntityList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EntityListItemProvider entityListItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.EntityList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createEntityListAdapter() {
		if (entityListItemProvider == null) {
			entityListItemProvider = new EntityListItemProvider(this);
		}

		return entityListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.EntityListEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EntityListEntryItemProvider entityListEntryItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.EntityListEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createEntityListEntryAdapter() {
		if (entityListEntryItemProvider == null) {
			entityListEntryItemProvider = new EntityListEntryItemProvider(this);
		}

		return entityListEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.EntityReferenceMsg} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected EntityReferenceMsgItemProvider entityReferenceMsgItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.EntityReferenceMsg}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createEntityReferenceMsgAdapter() {
		if (entityReferenceMsgItemProvider == null) {
			entityReferenceMsgItemProvider = new EntityReferenceMsgItemProvider(this);
		}

		return entityReferenceMsgItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.NamedEntityDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected NamedEntityDescriptionItemProvider namedEntityDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.NamedEntityDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createNamedEntityDescriptionAdapter() {
		if (namedEntityDescriptionItemProvider == null) {
			namedEntityDescriptionItemProvider = new NamedEntityDescriptionItemProvider(this);
		}

		return namedEntityDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.NamedIndividualDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected NamedIndividualDescriptionItemProvider namedIndividualDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.NamedIndividualDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createNamedIndividualDescriptionAdapter() {
		if (namedIndividualDescriptionItemProvider == null) {
			namedIndividualDescriptionItemProvider = new NamedIndividualDescriptionItemProvider(this);
		}

		return namedIndividualDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.ObjectPropertyDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ObjectPropertyDescriptionItemProvider objectPropertyDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.ObjectPropertyDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createObjectPropertyDescriptionAdapter() {
		if (objectPropertyDescriptionItemProvider == null) {
			objectPropertyDescriptionItemProvider = new ObjectPropertyDescriptionItemProvider(this);
		}

		return objectPropertyDescriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.openhealthtools.mdht.cts2.entity.PredicateDescription} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected PredicateDescriptionItemProvider predicateDescriptionItemProvider;

	/**
	 * This creates an adapter for a {@link org.openhealthtools.mdht.cts2.entity.PredicateDescription}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createPredicateDescriptionAdapter() {
		if (predicateDescriptionItemProvider == null) {
			predicateDescriptionItemProvider = new PredicateDescriptionItemProvider(this);
		}

		return predicateDescriptionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null
				? this
				: parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public void dispose() {
		if (annotationPropertyDescriptionItemProvider != null) {
			annotationPropertyDescriptionItemProvider.dispose();
		}
		if (anonymousEntityDescriptionItemProvider != null) {
			anonymousEntityDescriptionItemProvider.dispose();
		}
		if (anonymousIndividualDescriptionItemProvider != null) {
			anonymousIndividualDescriptionItemProvider.dispose();
		}
		if (classDescriptionItemProvider != null) {
			classDescriptionItemProvider.dispose();
		}
		if (dataPropertyDescriptionItemProvider != null) {
			dataPropertyDescriptionItemProvider.dispose();
		}
		if (dataTypeDescriptionItemProvider != null) {
			dataTypeDescriptionItemProvider.dispose();
		}
		if (designationItemProvider != null) {
			designationItemProvider.dispose();
		}
		if (documentRootItemProvider != null) {
			documentRootItemProvider.dispose();
		}
		if (entityDescriptionItemProvider != null) {
			entityDescriptionItemProvider.dispose();
		}
		if (entityDescriptionMsgItemProvider != null) {
			entityDescriptionMsgItemProvider.dispose();
		}
		if (entityDirectoryItemProvider != null) {
			entityDirectoryItemProvider.dispose();
		}
		if (entityDirectoryEntryItemProvider != null) {
			entityDirectoryEntryItemProvider.dispose();
		}
		if (entityListItemProvider != null) {
			entityListItemProvider.dispose();
		}
		if (entityListEntryItemProvider != null) {
			entityListEntryItemProvider.dispose();
		}
		if (entityReferenceMsgItemProvider != null) {
			entityReferenceMsgItemProvider.dispose();
		}
		if (namedEntityDescriptionItemProvider != null) {
			namedEntityDescriptionItemProvider.dispose();
		}
		if (namedIndividualDescriptionItemProvider != null) {
			namedIndividualDescriptionItemProvider.dispose();
		}
		if (objectPropertyDescriptionItemProvider != null) {
			objectPropertyDescriptionItemProvider.dispose();
		}
		if (predicateDescriptionItemProvider != null) {
			predicateDescriptionItemProvider.dispose();
		}
	}

}
